---
# Root level rules for the entire project
root: true

# Environment settings (you can customize these based on your project)
env:
  browser: true
  node: true
  es6: true

# Specifies the parser to use (e.g., babel-eslint, @typescript-eslint/parser)
parser: '@typescript-eslint/parser'

# Extend the recommended ESLint rules and any additional plugins you want to use
extends:
  - eslint:recommended
  - plugin:import/recommended
  - plugin:prettier/recommended

plugins:
  - import
  - prettier

# Additional rules and overrides go here
# ⭐ Rules
rules:
  # ⭐ Imports & Files extensions
  import/no-import-module-exports: 'off'
  # Avoid .ts and .tsx import extensions
  import/extensions: 'off'
  # Avoid extraneous dependencies (devDependencies)
  import/no-extraneous-dependencies: [error, { devDependencies: true }]
  # Turn on errors for missing imports
  import/no-unresolved: 'off'
  # We like to export single constants and functions
  import/prefer-default-export: 'off'
  # We use dynamic requires
  import/no-dynamic-require: 'off'
  global-require: 'off'
  # We love to export default on index files
  no-restricted-exports: 'off'
  max-len: ['error', { 'code': 140 }]
  class-methods-use-this: 'off'

  # ⭐ General rules
  # Fixing conflict between prettier and eslint with this rule
  object-curly-newline: 'off'
  # Disabling operator-linebreak & implicit-arrow-linebreak since prettier does not suppor it
  operator-linebreak: 'off'
  implicit-arrow-linebreak: 'off'
  # We need to re-assign some function parameters
  no-param-reassign: 'off'
  # We like to use hasOwnProperty
  no-prototype-builtins: 'off'
  # We use for..in
  no-restricted-syntax: 'off'
  # We like arrow parenthesis
  prettier/prettier: [error, { arrowParens: always }]
  # We like nested ternaries
  no-nested-ternary: 'off'
  # Conflicting with prettier
  react/jsx-wrap-multilines: 'off'
  # We need __NEXT_DATA__
  no-underscore-dangle: 'off'
  # This is affecting the authentication
  no-promise-executor-return: 'off'
  # We don't need a default in all cases
  default-case: 'off'
  # Prefering prettier format
  function-paren-newline: 'off'
  # We don't need consistent returns
  consistent-return: 'off'

  # ⭐ JSX-A11Y rules
  jsx-a11y/no-noninteractive-element-interactions: 'off'
  jsx-a11y/click-events-have-key-events: 'off'
  jsx-a11y/anchor-is-valid: 'off'

  # ⭐ TypeScript rules
  # We don't like comma-dangle
  '@typescript-eslint/comma-dangle': 'off'
  # Disabling indent in favor of prettier indentation
  '@typescript-eslint/indent': 'off'
  # Disabling base rule because reports incorrect errors with TypeScript types
  # Need it to stop if SERVICE is not passed
  '@typescript-eslint/no-throw-literal': 'off'
# Overrides for specific files or directories
# overrides:
#   - files: ['**/*.ts', '**/*.tsx']
#     parser: '@typescript-eslint/parser'
#     extends:
#       - 'plugin:@typescript-eslint/recommended'
#     plugins:
#       - '@typescript-eslint'
